<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.2 on 2020-08-11 -->

<plugin>
  <name>Cargo Maven 2 Plugin</name>
  <description>Cargo Maven 2 Plugin</description>
  <groupId>org.codehaus.cargo</groupId>
  <artifactId>cargo-maven2-plugin</artifactId>
  <version>1.7.16.payara-p1</version>
  <goalPrefix>cargo</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>help</goal>
      <description>Display help information on cargo-maven2-plugin.&lt;br/&gt;
Call &lt;code&gt;mvn cargo:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/code&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>redeploy</goal>
      <description>Class used uniquely to provide a goal alias for &lt;code&gt;deployer-redeploy&lt;/code&gt;.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.AliasedDeployerRedeployMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>uberwar</goal>
      <description>Builds an uber war.</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>org.codehaus.cargo.maven2.UberWarMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>archive</name>
          <type>org.apache.maven.archiver.MavenArchiveConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>The archive configuration to use. See &lt;a
href=&quot;http://maven.apache.org/shared/maven-archiver/index.html&quot;&gt;Maven Archiver Reference&lt;/a&gt;.</description>
        </parameter>
        <parameter>
          <name>descriptor</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The file name to use for the merge descriptor.</description>
        </parameter>
        <parameter>
          <name>descriptorId</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The id to use for the merge descriptor.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository.</description>
        </parameter>
        <parameter>
          <name>mavenProject</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The directory for the generated WAR.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories.</description>
        </parameter>
        <parameter>
          <name>resolveDependencies</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Attempt to resolve dependencies, rather than simply merging the files in WEB-INF/lib. This is
an experimental feature.</description>
        </parameter>
        <parameter>
          <name>warName</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The name of the generated WAR.</description>
        </parameter>
      </parameters>
      <configuration>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <mavenProject implementation="org.apache.maven.project.MavenProject">${project}</mavenProject>
        <outputDirectory implementation="java.lang.String">${project.build.directory}</outputDirectory>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <remoteRepositories implementation="java.util.List">${project.remoteArtifactRepositories}</remoteRepositories>
        <warName implementation="java.lang.String">${project.build.finalName}</warName>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.installer.ArtifactInstaller</role>
          <field-name>installer</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectBuilder</role>
          <field-name>mavenProjectBuilder</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>resolver</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>deployer-redeploy</goal>
      <description>Redeploy a deployable (i.e. undeploy and deploy it again) in a container.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.DeployerRedeployMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>package</goal>
      <description>Package a container distribution, a Configuration and deployed deployables. See
{@link org.codehaus.cargo.container.packager.Packager}.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.PackageMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>Maven2 Cargo Plugin v0.3</since>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>packager</name>
          <type>org.codehaus.cargo.maven2.configuration.Packager</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>deploy</goal>
      <description>Class used uniquely to provide a goal alias for &lt;code&gt;deployer-deploy&lt;/code&gt;.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.AliasedDeployerDeployMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>deployer-undeploy</goal>
      <description>Undeploy a deployable from a container.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.DeployerUndeployMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>restart</goal>
      <description>Restart a container using Cargo.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.ContainerRestartMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>undeploy</goal>
      <description>Class used uniquely to provide a goal alias for &lt;code&gt;deployer-undeploy&lt;/code&gt;.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.AliasedDeployerUndeployMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>install</goal>
      <description>Installs a container into a given directory. If the container is already installed nothing
happens. The container is defined using the &lt;code&gt;&amp;lt;container&amp;gt;&lt;/code&gt; element as described
in the &lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt;.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.ContainerInstallMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>Cargo Maven 2 / Maven 3 plugin v0.3</since>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>run</goal>
      <description>Start a container using Cargo and wait until user pressed CTRL + C to stop.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.ContainerRunMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>containerId</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the container id.</description>
        </parameter>
        <parameter>
          <name>containerUrl</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the container download URL.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <containerId implementation="java.lang.String">${cargo.maven.containerId}</containerId>
        <containerUrl implementation="java.lang.String">${cargo.maven.containerUrl}</containerUrl>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>daemon-start</goal>
      <description>Start a container via the daemon.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.DaemonStartMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>deployer-stop</goal>
      <description>Stop a deployable which is already deployed in a container.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.DeployerStopMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>deployer-start</goal>
      <description>Start a deployable which is already installed in a container.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.DeployerStartMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>configure</goal>
      <description>Mojo to create a local container standalone configuration at a specified directory.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.ConfigureMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>stop</goal>
      <description>Stop a running container using Cargo.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.ContainerStopMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>start</goal>
      <description>Start a container using Cargo.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.ContainerStartMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>deployer-deploy</goal>
      <description>Deploy a deployable to a container.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.DeployerDeployMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>daemon-stop</goal>
      <description>Stop a container via the daemon.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.codehaus.cargo.maven2.DaemonStopMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>configuration</name>
          <type>org.codehaus.cargo.maven2.configuration.Configuration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.configuration.Configuration}. See the
&lt;a href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>container</name>
          <type>org.codehaus.cargo.maven2.configuration.Container</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.Container}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>daemon</name>
          <type>org.codehaus.cargo.maven2.configuration.Daemon</type>
          <required>false</required>
          <editable>true</editable>
          <description>Daemon configuration.</description>
        </parameter>
        <parameter>
          <name>deployables</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployable[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of {@link org.codehaus.cargo.maven2.configuration.Deployable}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>deployer</name>
          <type>org.codehaus.cargo.maven2.configuration.Deployer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configures a Cargo {@link org.codehaus.cargo.container.deployer.Deployer}. See the &lt;a
href=&quot;https://codehaus-cargo.github.io/cargo/Maven2+Plugin+Reference+Guide.html&quot;&gt;Cargo
Maven 2 / Maven 3 plugin reference guide&lt;/a&gt; for more details.</description>
        </parameter>
        <parameter>
          <name>ignoreFailures</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the mojo ignore failures if something fails</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository. This is used by the artifact resolver to download resolved
artifacts and put them in the local repository so that they won&apos;t have to be fetched again
next time the plugin is executed.</description>
        </parameter>
        <parameter>
          <name>pluginVersion</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>Cargo plugin version.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>repositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The remote Maven repositories used by the artifact resolver to look for artifacts.</description>
        </parameter>
        <parameter>
          <name>settings</name>
          <type>org.apache.maven.settings.Settings</type>
          <required>true</required>
          <editable>false</editable>
          <description>Maven settings, injected automatically.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <since>1.0.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass cargo execution.</description>
        </parameter>
      </parameters>
      <configuration>
        <ignoreFailures implementation="boolean" default-value="false">${cargo.ignore.failures}</ignoreFailures>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <pluginVersion implementation="java.lang.String">${plugin.version}</pluginVersion>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <repositories implementation="java.util.List">${project.remoteArtifactRepositories}</repositories>
        <settings implementation="org.apache.maven.settings.Settings">${settings}</settings>
        <skip implementation="boolean" default-value="false">${cargo.maven.skip}</skip>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>metadataSource</field-name>
        </requirement>
      </requirements>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <type>jar</type>
      <version>1.0-alpha-8</version>
    </dependency>
    <dependency>
      <groupId>classworlds</groupId>
      <artifactId>classworlds</artifactId>
      <type>jar</type>
      <version>1.1-alpha-2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-archiver</artifactId>
      <type>jar</type>
      <version>2.4.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-archiver</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-io</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.13</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-api-generic</artifactId>
      <type>jar</type>
      <version>1.7.16.payara-p1</version>
    </dependency>
    <dependency>
      <groupId>commons-discovery</groupId>
      <artifactId>commons-discovery</artifactId>
      <type>jar</type>
      <version>0.5</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-api-container</artifactId>
      <type>jar</type>
      <version>1.7.16.payara-p1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-licensed-dtds</artifactId>
      <type>jar</type>
      <version>1.7.16.payara-p1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-documentation</artifactId>
      <type>jar</type>
      <version>1.7.16.payara-p1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-daemon-client</artifactId>
      <type>jar</type>
      <version>1.7.16.payara-p1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-api-util</artifactId>
      <type>jar</type>
      <version>1.7.16.payara-p1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <type>jar</type>
      <version>1.7.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant-launcher</artifactId>
      <type>jar</type>
      <version>1.7.0</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-api-module</artifactId>
      <type>jar</type>
      <version>1.7.16.payara-p1</version>
    </dependency>
    <dependency>
      <groupId>jaxen</groupId>
      <artifactId>jaxen</artifactId>
      <type>jar</type>
      <version>1.1.6</version>
    </dependency>
    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom</artifactId>
      <type>jar</type>
      <version>1.1.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-j2ee-deployment_1.1_spec</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
  </dependencies>
</plugin>